package strategy.searching;

import strategy.strategy.SortAndSearch;

/**
 * Finds the kth smallest element in an array
 * after sorting the contents.
 * @param <T> the generic type
 *
 * DO NOT EDIT THIS FILE!
 *
 * @author Josh Archer
 * @version 1.0
 */
public abstract class KthSmallestElement<T extends Comparable<T>> extends SortAndSearch<T>
{
    private int positionK;

    /**
     * Saves the position to search for
     * @param position the index of the input array
     */
    public KthSmallestElement(int position)
    {
        this.positionK = position;
    }

    @Override
    public T find(T[] array)
    {
        sort(array);
        return array[positionK];
    }

    /**
     * Sorts the input array
     * @param array the array to sort
     */
    public abstract void sort(T[] array);

    @Override
    public String toString()
    {
        return "KthSmallestElement{" +
            "positionK=" + positionK +
            '}';
    }
}
