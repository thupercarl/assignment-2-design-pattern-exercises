package observer;

import java.util.Random;

/**
 * Represent a coin which can be observed using a listener.
 *
 * DO NOT EDIT THIS FILE!
 *
 * @author Josh Archer
 * @version 1.0
 */
public class Coin extends Observable
{
    private String coinType;
    private boolean coinsFace;

    /**
     * Returns the type of coin (dime, nickel, quarter, ...)
     * @return the coin type
     */
    public String getCoinType()
    {
        return coinType;
    }

    /**
     * Sets the type of coin
     * @param newValue a new coin type
     */
    public void setCoinType(String newValue)
    {
        String oldValue = this.coinType;
        this.coinType = newValue;

        //notify listeners
        propertyChanges.firePropertyChange("coinType", oldValue, newValue);
    }

    /**
     * Returns true if the coin is heads up, or false otherwise
     * @return the coin state
     */
    public boolean getCoinsFace()
    {
        return coinsFace;
    }

    /**
     * Randomly alters the coin state.
     */
    public void flip()
    {
        Random random = new Random();
        boolean oldValue = this.coinsFace;
        boolean newValue = random.nextBoolean();
        coinsFace = newValue;

        //notify listeners
        propertyChanges.firePropertyChange("coinsFace", oldValue, newValue);
    }

    @Override
    public String toString()
    {
        return "Coin{" +
            "coinType='" + coinType + '\'' +
            ", coinsFace=" + coinsFace +
            '}';
    }
}
